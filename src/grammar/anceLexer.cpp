
// Generated from ./src/grammar/ance.g4 by ANTLR 4.10.1

#include "anceLexer.h"

using namespace antlr4;

using namespace antlr4;

namespace
{

    struct AnceLexerStaticData final {
        AnceLexerStaticData(std::vector<std::string> ruleNames,
                            std::vector<std::string> channelNames,
                            std::vector<std::string> modeNames,
                            std::vector<std::string> literalNames,
                            std::vector<std::string> symbolicNames)
            : ruleNames(std::move(ruleNames))
            , channelNames(std::move(channelNames))
            , modeNames(std::move(modeNames))
            , literalNames(std::move(literalNames))
            , symbolicNames(std::move(symbolicNames))
            , vocabulary(this->literalNames, this->symbolicNames)
        {}

        AnceLexerStaticData(const AnceLexerStaticData&)            = delete;
        AnceLexerStaticData(AnceLexerStaticData&&)                 = delete;
        AnceLexerStaticData& operator=(const AnceLexerStaticData&) = delete;
        AnceLexerStaticData& operator=(AnceLexerStaticData&&)      = delete;

        std::vector<antlr4::dfa::DFA>       decisionToDFA;
        antlr4::atn::PredictionContextCache sharedContextCache;
        const std::vector<std::string>      ruleNames;
        const std::vector<std::string>      channelNames;
        const std::vector<std::string>      modeNames;
        const std::vector<std::string>      literalNames;
        const std::vector<std::string>      symbolicNames;
        const antlr4::dfa::Vocabulary       vocabulary;
        antlr4::atn::SerializedATNView      serializedATN;
        std::unique_ptr<antlr4::atn::ATN>   atn;
    };

    std::once_flag       ancelexerLexerOnceFlag;
    AnceLexerStaticData* ancelexerLexerStaticData = nullptr;

    void ancelexerLexerInitialize()
    {
        assert(ancelexerLexerStaticData == nullptr);
        auto staticData = std::make_unique<AnceLexerStaticData>(
            std::vector<std::string> {"T__0",           "T__1",        "T__2",
                                      "T__3",           "T__4",        "T__5",
                                      "T__6",           "T__7",        "T__8",
                                      "T__9",           "T__10",       "T__11",
                                      "T__12",          "T__13",       "T__14",
                                      "T__15",          "T__16",       "T__17",
                                      "T__18",          "T__19",       "T__20",
                                      "T__21",          "T__22",       "T__23",
                                      "T__24",          "T__25",       "T__26",
                                      "T__27",          "T__28",       "T__29",
                                      "T__30",          "T__31",       "T__32",
                                      "T__33",          "T__34",       "T__35",
                                      "T__36",          "T__37",       "T__38",
                                      "T__39",          "T__40",       "T__41",
                                      "T__42",          "T__43",       "T__44",
                                      "T__45",          "T__46",       "T__47",
                                      "T__48",          "T__49",       "T__50",
                                      "T__51",          "T__52",       "T__53",
                                      "T__54",          "T__55",       "T__56",
                                      "T__57",          "T__58",       "T__59",
                                      "T__60",          "T__61",       "T__62",
                                      "T__63",          "T__64",       "T__65",
                                      "T__66",          "T__67",       "NATIVE_INTEGER_TYPE",
                                      "SIGNED_INTEGER", "HEX_INTEGER", "BIN_INTEGER",
                                      "OCT_INTEGER",    "HALF",        "SINGLE",
                                      "DOUBLE",         "QUAD",        "DECIMAL",
                                      "STRING",         "BYTE",        "INTEGER",
                                      "BUFFER",         "CONST",       "NOT",
                                      "IDENTIFIER",     "SEMICOLON",   "WHITESPACE",
                                      "BLOCK_COMMENT",  "LINE_COMMENT"},
            std::vector<std::string> {"DEFAULT_TOKEN_CHANNEL", "HIDDEN"},
            std::vector<std::string> {"DEFAULT_MODE"},
            std::vector<std::string> {"",
                                      "':'",
                                      "'('",
                                      "')'",
                                      "'{'",
                                      "'}'",
                                      "'extern'",
                                      "','",
                                      "'define'",
                                      "'alias'",
                                      "'struct'",
                                      "'public'",
                                      "'private'",
                                      "'let'",
                                      "'drop'",
                                      "'<:'",
                                      "'<-'",
                                      "':='",
                                      "'delete'",
                                      "'return'",
                                      "'assert'",
                                      "'if'",
                                      "'then'",
                                      "'else'",
                                      "'while'",
                                      "'do'",
                                      "'match'",
                                      "'with'",
                                      "'|'",
                                      "'=>'",
                                      "'default'",
                                      "'.'",
                                      "'['",
                                      "']'",
                                      "'and'",
                                      "'or'",
                                      "'<'",
                                      "'>'",
                                      "'*'",
                                      "'/'",
                                      "'%'",
                                      "'+'",
                                      "'-'",
                                      "'<='",
                                      "'>='",
                                      "'=='",
                                      "'!='",
                                      "'new'",
                                      "'dynamic'",
                                      "'automatic'",
                                      "'addressof'",
                                      "'ref'",
                                      "'to'",
                                      "'sizeof'",
                                      "'true'",
                                      "'false'",
                                      "'null'",
                                      "'size'",
                                      "'diff'",
                                      "'uiptr'",
                                      "'&'",
                                      "'half'",
                                      "'single'",
                                      "'double'",
                                      "'quad'",
                                      "'ptr'",
                                      "'bool'",
                                      "'nullptr'",
                                      "'void'",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "'[]'",
                                      "'const'",
                                      "'not'",
                                      "",
                                      "';'"},
            std::vector<std::string> {"",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "",
                                      "NATIVE_INTEGER_TYPE",
                                      "SIGNED_INTEGER",
                                      "HEX_INTEGER",
                                      "BIN_INTEGER",
                                      "OCT_INTEGER",
                                      "HALF",
                                      "SINGLE",
                                      "DOUBLE",
                                      "QUAD",
                                      "DECIMAL",
                                      "STRING",
                                      "BYTE",
                                      "INTEGER",
                                      "BUFFER",
                                      "CONST",
                                      "NOT",
                                      "IDENTIFIER",
                                      "SEMICOLON",
                                      "WHITESPACE",
                                      "BLOCK_COMMENT",
                                      "LINE_COMMENT"});
        static const int32_t serializedATNSegment[] = {
            4,   0,   89,  624, 6,   -1,  2,   0,   7,   0,   2,   1,   7,   1,   2,   2,   7,   2,   2,   3,   7,
            3,   2,   4,   7,   4,   2,   5,   7,   5,   2,   6,   7,   6,   2,   7,   7,   7,   2,   8,   7,   8,
            2,   9,   7,   9,   2,   10,  7,   10,  2,   11,  7,   11,  2,   12,  7,   12,  2,   13,  7,   13,  2,
            14,  7,   14,  2,   15,  7,   15,  2,   16,  7,   16,  2,   17,  7,   17,  2,   18,  7,   18,  2,   19,
            7,   19,  2,   20,  7,   20,  2,   21,  7,   21,  2,   22,  7,   22,  2,   23,  7,   23,  2,   24,  7,
            24,  2,   25,  7,   25,  2,   26,  7,   26,  2,   27,  7,   27,  2,   28,  7,   28,  2,   29,  7,   29,
            2,   30,  7,   30,  2,   31,  7,   31,  2,   32,  7,   32,  2,   33,  7,   33,  2,   34,  7,   34,  2,
            35,  7,   35,  2,   36,  7,   36,  2,   37,  7,   37,  2,   38,  7,   38,  2,   39,  7,   39,  2,   40,
            7,   40,  2,   41,  7,   41,  2,   42,  7,   42,  2,   43,  7,   43,  2,   44,  7,   44,  2,   45,  7,
            45,  2,   46,  7,   46,  2,   47,  7,   47,  2,   48,  7,   48,  2,   49,  7,   49,  2,   50,  7,   50,
            2,   51,  7,   51,  2,   52,  7,   52,  2,   53,  7,   53,  2,   54,  7,   54,  2,   55,  7,   55,  2,
            56,  7,   56,  2,   57,  7,   57,  2,   58,  7,   58,  2,   59,  7,   59,  2,   60,  7,   60,  2,   61,
            7,   61,  2,   62,  7,   62,  2,   63,  7,   63,  2,   64,  7,   64,  2,   65,  7,   65,  2,   66,  7,
            66,  2,   67,  7,   67,  2,   68,  7,   68,  2,   69,  7,   69,  2,   70,  7,   70,  2,   71,  7,   71,
            2,   72,  7,   72,  2,   73,  7,   73,  2,   74,  7,   74,  2,   75,  7,   75,  2,   76,  7,   76,  2,
            77,  7,   77,  2,   78,  7,   78,  2,   79,  7,   79,  2,   80,  7,   80,  2,   81,  7,   81,  2,   82,
            7,   82,  2,   83,  7,   83,  2,   84,  7,   84,  2,   85,  7,   85,  2,   86,  7,   86,  2,   87,  7,
            87,  2,   88,  7,   88,  1,   0,   1,   0,   1,   1,   1,   1,   1,   2,   1,   2,   1,   3,   1,   3,
            1,   4,   1,   4,   1,   5,   1,   5,   1,   5,   1,   5,   1,   5,   1,   5,   1,   5,   1,   6,   1,
            6,   1,   7,   1,   7,   1,   7,   1,   7,   1,   7,   1,   7,   1,   7,   1,   8,   1,   8,   1,   8,
            1,   8,   1,   8,   1,   8,   1,   9,   1,   9,   1,   9,   1,   9,   1,   9,   1,   9,   1,   9,   1,
            10,  1,   10,  1,   10,  1,   10,  1,   10,  1,   10,  1,   10,  1,   11,  1,   11,  1,   11,  1,   11,
            1,   11,  1,   11,  1,   11,  1,   11,  1,   12,  1,   12,  1,   12,  1,   12,  1,   13,  1,   13,  1,
            13,  1,   13,  1,   13,  1,   14,  1,   14,  1,   14,  1,   15,  1,   15,  1,   15,  1,   16,  1,   16,
            1,   16,  1,   17,  1,   17,  1,   17,  1,   17,  1,   17,  1,   17,  1,   17,  1,   18,  1,   18,  1,
            18,  1,   18,  1,   18,  1,   18,  1,   18,  1,   19,  1,   19,  1,   19,  1,   19,  1,   19,  1,   19,
            1,   19,  1,   20,  1,   20,  1,   20,  1,   21,  1,   21,  1,   21,  1,   21,  1,   21,  1,   22,  1,
            22,  1,   22,  1,   22,  1,   22,  1,   23,  1,   23,  1,   23,  1,   23,  1,   23,  1,   23,  1,   24,
            1,   24,  1,   24,  1,   25,  1,   25,  1,   25,  1,   25,  1,   25,  1,   25,  1,   26,  1,   26,  1,
            26,  1,   26,  1,   26,  1,   27,  1,   27,  1,   28,  1,   28,  1,   28,  1,   29,  1,   29,  1,   29,
            1,   29,  1,   29,  1,   29,  1,   29,  1,   29,  1,   30,  1,   30,  1,   31,  1,   31,  1,   32,  1,
            32,  1,   33,  1,   33,  1,   33,  1,   33,  1,   34,  1,   34,  1,   34,  1,   35,  1,   35,  1,   36,
            1,   36,  1,   37,  1,   37,  1,   38,  1,   38,  1,   39,  1,   39,  1,   40,  1,   40,  1,   41,  1,
            41,  1,   42,  1,   42,  1,   42,  1,   43,  1,   43,  1,   43,  1,   44,  1,   44,  1,   44,  1,   45,
            1,   45,  1,   45,  1,   46,  1,   46,  1,   46,  1,   46,  1,   47,  1,   47,  1,   47,  1,   47,  1,
            47,  1,   47,  1,   47,  1,   47,  1,   48,  1,   48,  1,   48,  1,   48,  1,   48,  1,   48,  1,   48,
            1,   48,  1,   48,  1,   48,  1,   49,  1,   49,  1,   49,  1,   49,  1,   49,  1,   49,  1,   49,  1,
            49,  1,   49,  1,   49,  1,   50,  1,   50,  1,   50,  1,   50,  1,   51,  1,   51,  1,   51,  1,   52,
            1,   52,  1,   52,  1,   52,  1,   52,  1,   52,  1,   52,  1,   53,  1,   53,  1,   53,  1,   53,  1,
            53,  1,   54,  1,   54,  1,   54,  1,   54,  1,   54,  1,   54,  1,   55,  1,   55,  1,   55,  1,   55,
            1,   55,  1,   56,  1,   56,  1,   56,  1,   56,  1,   56,  1,   57,  1,   57,  1,   57,  1,   57,  1,
            57,  1,   58,  1,   58,  1,   58,  1,   58,  1,   58,  1,   58,  1,   59,  1,   59,  1,   60,  1,   60,
            1,   60,  1,   60,  1,   60,  1,   61,  1,   61,  1,   61,  1,   61,  1,   61,  1,   61,  1,   61,  1,
            62,  1,   62,  1,   62,  1,   62,  1,   62,  1,   62,  1,   62,  1,   63,  1,   63,  1,   63,  1,   63,
            1,   63,  1,   64,  1,   64,  1,   64,  1,   64,  1,   65,  1,   65,  1,   65,  1,   65,  1,   65,  1,
            66,  1,   66,  1,   66,  1,   66,  1,   66,  1,   66,  1,   66,  1,   66,  1,   67,  1,   67,  1,   67,
            1,   67,  1,   67,  1,   68,  3,   68,  485, 8,   68,  1,   68,  1,   68,  1,   68,  1,   69,  1,   69,
            1,   69,  1,   70,  1,   70,  1,   70,  4,   70,  496, 8,   70,  11,  70,  12,  70,  497, 1,   71,  1,
            71,  1,   71,  4,   71,  503, 8,   71,  11,  71,  12,  71,  504, 1,   72,  1,   72,  1,   72,  4,   72,
            510, 8,   72,  11,  72,  12,  72,  511, 1,   73,  1,   73,  1,   73,  1,   74,  1,   74,  1,   74,  1,
            75,  1,   75,  1,   75,  1,   76,  1,   76,  1,   76,  1,   77,  3,   77,  527, 8,   77,  1,   77,  5,
            77,  530, 8,   77,  10,  77,  12,  77,  533, 9,   77,  1,   77,  1,   77,  4,   77,  537, 8,   77,  11,
            77,  12,  77,  538, 1,   78,  1,   78,  1,   78,  1,   78,  5,   78,  545, 8,   78,  10,  78,  12,  78,
            548, 9,   78,  1,   78,  1,   78,  1,   79,  1,   79,  1,   79,  1,   79,  3,   79,  556, 8,   79,  1,
            79,  1,   79,  1,   80,  4,   80,  561, 8,   80,  11,  80,  12,  80,  562, 1,   81,  1,   81,  1,   81,
            1,   82,  1,   82,  1,   82,  1,   82,  1,   82,  1,   82,  1,   83,  1,   83,  1,   83,  1,   83,  1,
            84,  5,   84,  579, 8,   84,  10,  84,  12,  84,  582, 9,   84,  1,   84,  1,   84,  5,   84,  586, 8,
            84,  10,  84,  12,  84,  589, 9,   84,  1,   85,  1,   85,  1,   86,  4,   86,  594, 8,   86,  11,  86,
            12,  86,  595, 1,   86,  1,   86,  1,   87,  1,   87,  1,   87,  1,   87,  5,   87,  604, 8,   87,  10,
            87,  12,  87,  607, 9,   87,  1,   87,  1,   87,  1,   87,  1,   87,  1,   87,  1,   88,  1,   88,  1,
            88,  1,   88,  5,   88,  618, 8,   88,  10,  88,  12,  88,  621, 9,   88,  1,   88,  1,   88,  2,   546,
            605, 0,   89,  1,   1,   3,   2,   5,   3,   7,   4,   9,   5,   11,  6,   13,  7,   15,  8,   17,  9,
            19,  10,  21,  11,  23,  12,  25,  13,  27,  14,  29,  15,  31,  16,  33,  17,  35,  18,  37,  19,  39,
            20,  41,  21,  43,  22,  45,  23,  47,  24,  49,  25,  51,  26,  53,  27,  55,  28,  57,  29,  59,  30,
            61,  31,  63,  32,  65,  33,  67,  34,  69,  35,  71,  36,  73,  37,  75,  38,  77,  39,  79,  40,  81,
            41,  83,  42,  85,  43,  87,  44,  89,  45,  91,  46,  93,  47,  95,  48,  97,  49,  99,  50,  101, 51,
            103, 52,  105, 53,  107, 54,  109, 55,  111, 56,  113, 57,  115, 58,  117, 59,  119, 60,  121, 61,  123,
            62,  125, 63,  127, 64,  129, 65,  131, 66,  133, 67,  135, 68,  137, 69,  139, 70,  141, 71,  143, 72,
            145, 73,  147, 74,  149, 75,  151, 76,  153, 77,  155, 78,  157, 79,  159, 80,  161, 81,  163, 82,  165,
            83,  167, 84,  169, 85,  171, 86,  173, 87,  175, 88,  177, 89,  1,   0,   13,  2,   0,   43,  43,  45,
            45,  2,   0,   88,  88,  120, 120, 3,   0,   48,  57,  65,  70,  97,  102, 2,   0,   66,  66,  98,  98,
            1,   0,   48,  49,  2,   0,   79,  79,  111, 111, 1,   0,   48,  55,  1,   0,   48,  57,  1,   0,   95,
            95,  2,   0,   65,  90,  97,  122, 4,   0,   48,  57,  65,  90,  95,  95,  97,  122, 3,   0,   9,   10,
            13,  13,  32,  32,  2,   0,   10,  10,  13,  13,  639, 0,   1,   1,   0,   0,   0,   0,   3,   1,   0,
            0,   0,   0,   5,   1,   0,   0,   0,   0,   7,   1,   0,   0,   0,   0,   9,   1,   0,   0,   0,   0,
            11,  1,   0,   0,   0,   0,   13,  1,   0,   0,   0,   0,   15,  1,   0,   0,   0,   0,   17,  1,   0,
            0,   0,   0,   19,  1,   0,   0,   0,   0,   21,  1,   0,   0,   0,   0,   23,  1,   0,   0,   0,   0,
            25,  1,   0,   0,   0,   0,   27,  1,   0,   0,   0,   0,   29,  1,   0,   0,   0,   0,   31,  1,   0,
            0,   0,   0,   33,  1,   0,   0,   0,   0,   35,  1,   0,   0,   0,   0,   37,  1,   0,   0,   0,   0,
            39,  1,   0,   0,   0,   0,   41,  1,   0,   0,   0,   0,   43,  1,   0,   0,   0,   0,   45,  1,   0,
            0,   0,   0,   47,  1,   0,   0,   0,   0,   49,  1,   0,   0,   0,   0,   51,  1,   0,   0,   0,   0,
            53,  1,   0,   0,   0,   0,   55,  1,   0,   0,   0,   0,   57,  1,   0,   0,   0,   0,   59,  1,   0,
            0,   0,   0,   61,  1,   0,   0,   0,   0,   63,  1,   0,   0,   0,   0,   65,  1,   0,   0,   0,   0,
            67,  1,   0,   0,   0,   0,   69,  1,   0,   0,   0,   0,   71,  1,   0,   0,   0,   0,   73,  1,   0,
            0,   0,   0,   75,  1,   0,   0,   0,   0,   77,  1,   0,   0,   0,   0,   79,  1,   0,   0,   0,   0,
            81,  1,   0,   0,   0,   0,   83,  1,   0,   0,   0,   0,   85,  1,   0,   0,   0,   0,   87,  1,   0,
            0,   0,   0,   89,  1,   0,   0,   0,   0,   91,  1,   0,   0,   0,   0,   93,  1,   0,   0,   0,   0,
            95,  1,   0,   0,   0,   0,   97,  1,   0,   0,   0,   0,   99,  1,   0,   0,   0,   0,   101, 1,   0,
            0,   0,   0,   103, 1,   0,   0,   0,   0,   105, 1,   0,   0,   0,   0,   107, 1,   0,   0,   0,   0,
            109, 1,   0,   0,   0,   0,   111, 1,   0,   0,   0,   0,   113, 1,   0,   0,   0,   0,   115, 1,   0,
            0,   0,   0,   117, 1,   0,   0,   0,   0,   119, 1,   0,   0,   0,   0,   121, 1,   0,   0,   0,   0,
            123, 1,   0,   0,   0,   0,   125, 1,   0,   0,   0,   0,   127, 1,   0,   0,   0,   0,   129, 1,   0,
            0,   0,   0,   131, 1,   0,   0,   0,   0,   133, 1,   0,   0,   0,   0,   135, 1,   0,   0,   0,   0,
            137, 1,   0,   0,   0,   0,   139, 1,   0,   0,   0,   0,   141, 1,   0,   0,   0,   0,   143, 1,   0,
            0,   0,   0,   145, 1,   0,   0,   0,   0,   147, 1,   0,   0,   0,   0,   149, 1,   0,   0,   0,   0,
            151, 1,   0,   0,   0,   0,   153, 1,   0,   0,   0,   0,   155, 1,   0,   0,   0,   0,   157, 1,   0,
            0,   0,   0,   159, 1,   0,   0,   0,   0,   161, 1,   0,   0,   0,   0,   163, 1,   0,   0,   0,   0,
            165, 1,   0,   0,   0,   0,   167, 1,   0,   0,   0,   0,   169, 1,   0,   0,   0,   0,   171, 1,   0,
            0,   0,   0,   173, 1,   0,   0,   0,   0,   175, 1,   0,   0,   0,   0,   177, 1,   0,   0,   0,   1,
            179, 1,   0,   0,   0,   3,   181, 1,   0,   0,   0,   5,   183, 1,   0,   0,   0,   7,   185, 1,   0,
            0,   0,   9,   187, 1,   0,   0,   0,   11,  189, 1,   0,   0,   0,   13,  196, 1,   0,   0,   0,   15,
            198, 1,   0,   0,   0,   17,  205, 1,   0,   0,   0,   19,  211, 1,   0,   0,   0,   21,  218, 1,   0,
            0,   0,   23,  225, 1,   0,   0,   0,   25,  233, 1,   0,   0,   0,   27,  237, 1,   0,   0,   0,   29,
            242, 1,   0,   0,   0,   31,  245, 1,   0,   0,   0,   33,  248, 1,   0,   0,   0,   35,  251, 1,   0,
            0,   0,   37,  258, 1,   0,   0,   0,   39,  265, 1,   0,   0,   0,   41,  272, 1,   0,   0,   0,   43,
            275, 1,   0,   0,   0,   45,  280, 1,   0,   0,   0,   47,  285, 1,   0,   0,   0,   49,  291, 1,   0,
            0,   0,   51,  294, 1,   0,   0,   0,   53,  300, 1,   0,   0,   0,   55,  305, 1,   0,   0,   0,   57,
            307, 1,   0,   0,   0,   59,  310, 1,   0,   0,   0,   61,  318, 1,   0,   0,   0,   63,  320, 1,   0,
            0,   0,   65,  322, 1,   0,   0,   0,   67,  324, 1,   0,   0,   0,   69,  328, 1,   0,   0,   0,   71,
            331, 1,   0,   0,   0,   73,  333, 1,   0,   0,   0,   75,  335, 1,   0,   0,   0,   77,  337, 1,   0,
            0,   0,   79,  339, 1,   0,   0,   0,   81,  341, 1,   0,   0,   0,   83,  343, 1,   0,   0,   0,   85,
            345, 1,   0,   0,   0,   87,  348, 1,   0,   0,   0,   89,  351, 1,   0,   0,   0,   91,  354, 1,   0,
            0,   0,   93,  357, 1,   0,   0,   0,   95,  361, 1,   0,   0,   0,   97,  369, 1,   0,   0,   0,   99,
            379, 1,   0,   0,   0,   101, 389, 1,   0,   0,   0,   103, 393, 1,   0,   0,   0,   105, 396, 1,   0,
            0,   0,   107, 403, 1,   0,   0,   0,   109, 408, 1,   0,   0,   0,   111, 414, 1,   0,   0,   0,   113,
            419, 1,   0,   0,   0,   115, 424, 1,   0,   0,   0,   117, 429, 1,   0,   0,   0,   119, 435, 1,   0,
            0,   0,   121, 437, 1,   0,   0,   0,   123, 442, 1,   0,   0,   0,   125, 449, 1,   0,   0,   0,   127,
            456, 1,   0,   0,   0,   129, 461, 1,   0,   0,   0,   131, 465, 1,   0,   0,   0,   133, 470, 1,   0,
            0,   0,   135, 478, 1,   0,   0,   0,   137, 484, 1,   0,   0,   0,   139, 489, 1,   0,   0,   0,   141,
            492, 1,   0,   0,   0,   143, 499, 1,   0,   0,   0,   145, 506, 1,   0,   0,   0,   147, 513, 1,   0,
            0,   0,   149, 516, 1,   0,   0,   0,   151, 519, 1,   0,   0,   0,   153, 522, 1,   0,   0,   0,   155,
            526, 1,   0,   0,   0,   157, 540, 1,   0,   0,   0,   159, 551, 1,   0,   0,   0,   161, 560, 1,   0,
            0,   0,   163, 564, 1,   0,   0,   0,   165, 567, 1,   0,   0,   0,   167, 573, 1,   0,   0,   0,   169,
            580, 1,   0,   0,   0,   171, 590, 1,   0,   0,   0,   173, 593, 1,   0,   0,   0,   175, 599, 1,   0,
            0,   0,   177, 613, 1,   0,   0,   0,   179, 180, 5,   58,  0,   0,   180, 2,   1,   0,   0,   0,   181,
            182, 5,   40,  0,   0,   182, 4,   1,   0,   0,   0,   183, 184, 5,   41,  0,   0,   184, 6,   1,   0,
            0,   0,   185, 186, 5,   123, 0,   0,   186, 8,   1,   0,   0,   0,   187, 188, 5,   125, 0,   0,   188,
            10,  1,   0,   0,   0,   189, 190, 5,   101, 0,   0,   190, 191, 5,   120, 0,   0,   191, 192, 5,   116,
            0,   0,   192, 193, 5,   101, 0,   0,   193, 194, 5,   114, 0,   0,   194, 195, 5,   110, 0,   0,   195,
            12,  1,   0,   0,   0,   196, 197, 5,   44,  0,   0,   197, 14,  1,   0,   0,   0,   198, 199, 5,   100,
            0,   0,   199, 200, 5,   101, 0,   0,   200, 201, 5,   102, 0,   0,   201, 202, 5,   105, 0,   0,   202,
            203, 5,   110, 0,   0,   203, 204, 5,   101, 0,   0,   204, 16,  1,   0,   0,   0,   205, 206, 5,   97,
            0,   0,   206, 207, 5,   108, 0,   0,   207, 208, 5,   105, 0,   0,   208, 209, 5,   97,  0,   0,   209,
            210, 5,   115, 0,   0,   210, 18,  1,   0,   0,   0,   211, 212, 5,   115, 0,   0,   212, 213, 5,   116,
            0,   0,   213, 214, 5,   114, 0,   0,   214, 215, 5,   117, 0,   0,   215, 216, 5,   99,  0,   0,   216,
            217, 5,   116, 0,   0,   217, 20,  1,   0,   0,   0,   218, 219, 5,   112, 0,   0,   219, 220, 5,   117,
            0,   0,   220, 221, 5,   98,  0,   0,   221, 222, 5,   108, 0,   0,   222, 223, 5,   105, 0,   0,   223,
            224, 5,   99,  0,   0,   224, 22,  1,   0,   0,   0,   225, 226, 5,   112, 0,   0,   226, 227, 5,   114,
            0,   0,   227, 228, 5,   105, 0,   0,   228, 229, 5,   118, 0,   0,   229, 230, 5,   97,  0,   0,   230,
            231, 5,   116, 0,   0,   231, 232, 5,   101, 0,   0,   232, 24,  1,   0,   0,   0,   233, 234, 5,   108,
            0,   0,   234, 235, 5,   101, 0,   0,   235, 236, 5,   116, 0,   0,   236, 26,  1,   0,   0,   0,   237,
            238, 5,   100, 0,   0,   238, 239, 5,   114, 0,   0,   239, 240, 5,   111, 0,   0,   240, 241, 5,   112,
            0,   0,   241, 28,  1,   0,   0,   0,   242, 243, 5,   60,  0,   0,   243, 244, 5,   58,  0,   0,   244,
            30,  1,   0,   0,   0,   245, 246, 5,   60,  0,   0,   246, 247, 5,   45,  0,   0,   247, 32,  1,   0,
            0,   0,   248, 249, 5,   58,  0,   0,   249, 250, 5,   61,  0,   0,   250, 34,  1,   0,   0,   0,   251,
            252, 5,   100, 0,   0,   252, 253, 5,   101, 0,   0,   253, 254, 5,   108, 0,   0,   254, 255, 5,   101,
            0,   0,   255, 256, 5,   116, 0,   0,   256, 257, 5,   101, 0,   0,   257, 36,  1,   0,   0,   0,   258,
            259, 5,   114, 0,   0,   259, 260, 5,   101, 0,   0,   260, 261, 5,   116, 0,   0,   261, 262, 5,   117,
            0,   0,   262, 263, 5,   114, 0,   0,   263, 264, 5,   110, 0,   0,   264, 38,  1,   0,   0,   0,   265,
            266, 5,   97,  0,   0,   266, 267, 5,   115, 0,   0,   267, 268, 5,   115, 0,   0,   268, 269, 5,   101,
            0,   0,   269, 270, 5,   114, 0,   0,   270, 271, 5,   116, 0,   0,   271, 40,  1,   0,   0,   0,   272,
            273, 5,   105, 0,   0,   273, 274, 5,   102, 0,   0,   274, 42,  1,   0,   0,   0,   275, 276, 5,   116,
            0,   0,   276, 277, 5,   104, 0,   0,   277, 278, 5,   101, 0,   0,   278, 279, 5,   110, 0,   0,   279,
            44,  1,   0,   0,   0,   280, 281, 5,   101, 0,   0,   281, 282, 5,   108, 0,   0,   282, 283, 5,   115,
            0,   0,   283, 284, 5,   101, 0,   0,   284, 46,  1,   0,   0,   0,   285, 286, 5,   119, 0,   0,   286,
            287, 5,   104, 0,   0,   287, 288, 5,   105, 0,   0,   288, 289, 5,   108, 0,   0,   289, 290, 5,   101,
            0,   0,   290, 48,  1,   0,   0,   0,   291, 292, 5,   100, 0,   0,   292, 293, 5,   111, 0,   0,   293,
            50,  1,   0,   0,   0,   294, 295, 5,   109, 0,   0,   295, 296, 5,   97,  0,   0,   296, 297, 5,   116,
            0,   0,   297, 298, 5,   99,  0,   0,   298, 299, 5,   104, 0,   0,   299, 52,  1,   0,   0,   0,   300,
            301, 5,   119, 0,   0,   301, 302, 5,   105, 0,   0,   302, 303, 5,   116, 0,   0,   303, 304, 5,   104,
            0,   0,   304, 54,  1,   0,   0,   0,   305, 306, 5,   124, 0,   0,   306, 56,  1,   0,   0,   0,   307,
            308, 5,   61,  0,   0,   308, 309, 5,   62,  0,   0,   309, 58,  1,   0,   0,   0,   310, 311, 5,   100,
            0,   0,   311, 312, 5,   101, 0,   0,   312, 313, 5,   102, 0,   0,   313, 314, 5,   97,  0,   0,   314,
            315, 5,   117, 0,   0,   315, 316, 5,   108, 0,   0,   316, 317, 5,   116, 0,   0,   317, 60,  1,   0,
            0,   0,   318, 319, 5,   46,  0,   0,   319, 62,  1,   0,   0,   0,   320, 321, 5,   91,  0,   0,   321,
            64,  1,   0,   0,   0,   322, 323, 5,   93,  0,   0,   323, 66,  1,   0,   0,   0,   324, 325, 5,   97,
            0,   0,   325, 326, 5,   110, 0,   0,   326, 327, 5,   100, 0,   0,   327, 68,  1,   0,   0,   0,   328,
            329, 5,   111, 0,   0,   329, 330, 5,   114, 0,   0,   330, 70,  1,   0,   0,   0,   331, 332, 5,   60,
            0,   0,   332, 72,  1,   0,   0,   0,   333, 334, 5,   62,  0,   0,   334, 74,  1,   0,   0,   0,   335,
            336, 5,   42,  0,   0,   336, 76,  1,   0,   0,   0,   337, 338, 5,   47,  0,   0,   338, 78,  1,   0,
            0,   0,   339, 340, 5,   37,  0,   0,   340, 80,  1,   0,   0,   0,   341, 342, 5,   43,  0,   0,   342,
            82,  1,   0,   0,   0,   343, 344, 5,   45,  0,   0,   344, 84,  1,   0,   0,   0,   345, 346, 5,   60,
            0,   0,   346, 347, 5,   61,  0,   0,   347, 86,  1,   0,   0,   0,   348, 349, 5,   62,  0,   0,   349,
            350, 5,   61,  0,   0,   350, 88,  1,   0,   0,   0,   351, 352, 5,   61,  0,   0,   352, 353, 5,   61,
            0,   0,   353, 90,  1,   0,   0,   0,   354, 355, 5,   33,  0,   0,   355, 356, 5,   61,  0,   0,   356,
            92,  1,   0,   0,   0,   357, 358, 5,   110, 0,   0,   358, 359, 5,   101, 0,   0,   359, 360, 5,   119,
            0,   0,   360, 94,  1,   0,   0,   0,   361, 362, 5,   100, 0,   0,   362, 363, 5,   121, 0,   0,   363,
            364, 5,   110, 0,   0,   364, 365, 5,   97,  0,   0,   365, 366, 5,   109, 0,   0,   366, 367, 5,   105,
            0,   0,   367, 368, 5,   99,  0,   0,   368, 96,  1,   0,   0,   0,   369, 370, 5,   97,  0,   0,   370,
            371, 5,   117, 0,   0,   371, 372, 5,   116, 0,   0,   372, 373, 5,   111, 0,   0,   373, 374, 5,   109,
            0,   0,   374, 375, 5,   97,  0,   0,   375, 376, 5,   116, 0,   0,   376, 377, 5,   105, 0,   0,   377,
            378, 5,   99,  0,   0,   378, 98,  1,   0,   0,   0,   379, 380, 5,   97,  0,   0,   380, 381, 5,   100,
            0,   0,   381, 382, 5,   100, 0,   0,   382, 383, 5,   114, 0,   0,   383, 384, 5,   101, 0,   0,   384,
            385, 5,   115, 0,   0,   385, 386, 5,   115, 0,   0,   386, 387, 5,   111, 0,   0,   387, 388, 5,   102,
            0,   0,   388, 100, 1,   0,   0,   0,   389, 390, 5,   114, 0,   0,   390, 391, 5,   101, 0,   0,   391,
            392, 5,   102, 0,   0,   392, 102, 1,   0,   0,   0,   393, 394, 5,   116, 0,   0,   394, 395, 5,   111,
            0,   0,   395, 104, 1,   0,   0,   0,   396, 397, 5,   115, 0,   0,   397, 398, 5,   105, 0,   0,   398,
            399, 5,   122, 0,   0,   399, 400, 5,   101, 0,   0,   400, 401, 5,   111, 0,   0,   401, 402, 5,   102,
            0,   0,   402, 106, 1,   0,   0,   0,   403, 404, 5,   116, 0,   0,   404, 405, 5,   114, 0,   0,   405,
            406, 5,   117, 0,   0,   406, 407, 5,   101, 0,   0,   407, 108, 1,   0,   0,   0,   408, 409, 5,   102,
            0,   0,   409, 410, 5,   97,  0,   0,   410, 411, 5,   108, 0,   0,   411, 412, 5,   115, 0,   0,   412,
            413, 5,   101, 0,   0,   413, 110, 1,   0,   0,   0,   414, 415, 5,   110, 0,   0,   415, 416, 5,   117,
            0,   0,   416, 417, 5,   108, 0,   0,   417, 418, 5,   108, 0,   0,   418, 112, 1,   0,   0,   0,   419,
            420, 5,   115, 0,   0,   420, 421, 5,   105, 0,   0,   421, 422, 5,   122, 0,   0,   422, 423, 5,   101,
            0,   0,   423, 114, 1,   0,   0,   0,   424, 425, 5,   100, 0,   0,   425, 426, 5,   105, 0,   0,   426,
            427, 5,   102, 0,   0,   427, 428, 5,   102, 0,   0,   428, 116, 1,   0,   0,   0,   429, 430, 5,   117,
            0,   0,   430, 431, 5,   105, 0,   0,   431, 432, 5,   112, 0,   0,   432, 433, 5,   116, 0,   0,   433,
            434, 5,   114, 0,   0,   434, 118, 1,   0,   0,   0,   435, 436, 5,   38,  0,   0,   436, 120, 1,   0,
            0,   0,   437, 438, 5,   104, 0,   0,   438, 439, 5,   97,  0,   0,   439, 440, 5,   108, 0,   0,   440,
            441, 5,   102, 0,   0,   441, 122, 1,   0,   0,   0,   442, 443, 5,   115, 0,   0,   443, 444, 5,   105,
            0,   0,   444, 445, 5,   110, 0,   0,   445, 446, 5,   103, 0,   0,   446, 447, 5,   108, 0,   0,   447,
            448, 5,   101, 0,   0,   448, 124, 1,   0,   0,   0,   449, 450, 5,   100, 0,   0,   450, 451, 5,   111,
            0,   0,   451, 452, 5,   117, 0,   0,   452, 453, 5,   98,  0,   0,   453, 454, 5,   108, 0,   0,   454,
            455, 5,   101, 0,   0,   455, 126, 1,   0,   0,   0,   456, 457, 5,   113, 0,   0,   457, 458, 5,   117,
            0,   0,   458, 459, 5,   97,  0,   0,   459, 460, 5,   100, 0,   0,   460, 128, 1,   0,   0,   0,   461,
            462, 5,   112, 0,   0,   462, 463, 5,   116, 0,   0,   463, 464, 5,   114, 0,   0,   464, 130, 1,   0,
            0,   0,   465, 466, 5,   98,  0,   0,   466, 467, 5,   111, 0,   0,   467, 468, 5,   111, 0,   0,   468,
            469, 5,   108, 0,   0,   469, 132, 1,   0,   0,   0,   470, 471, 5,   110, 0,   0,   471, 472, 5,   117,
            0,   0,   472, 473, 5,   108, 0,   0,   473, 474, 5,   108, 0,   0,   474, 475, 5,   112, 0,   0,   475,
            476, 5,   116, 0,   0,   476, 477, 5,   114, 0,   0,   477, 134, 1,   0,   0,   0,   478, 479, 5,   118,
            0,   0,   479, 480, 5,   111, 0,   0,   480, 481, 5,   105, 0,   0,   481, 482, 5,   100, 0,   0,   482,
            136, 1,   0,   0,   0,   483, 485, 5,   117, 0,   0,   484, 483, 1,   0,   0,   0,   484, 485, 1,   0,
            0,   0,   485, 486, 1,   0,   0,   0,   486, 487, 5,   105, 0,   0,   487, 488, 3,   161, 80,  0,   488,
            138, 1,   0,   0,   0,   489, 490, 7,   0,   0,   0,   490, 491, 3,   161, 80,  0,   491, 140, 1,   0,
            0,   0,   492, 493, 5,   48,  0,   0,   493, 495, 7,   1,   0,   0,   494, 496, 7,   2,   0,   0,   495,
            494, 1,   0,   0,   0,   496, 497, 1,   0,   0,   0,   497, 495, 1,   0,   0,   0,   497, 498, 1,   0,
            0,   0,   498, 142, 1,   0,   0,   0,   499, 500, 5,   48,  0,   0,   500, 502, 7,   3,   0,   0,   501,
            503, 7,   4,   0,   0,   502, 501, 1,   0,   0,   0,   503, 504, 1,   0,   0,   0,   504, 502, 1,   0,
            0,   0,   504, 505, 1,   0,   0,   0,   505, 144, 1,   0,   0,   0,   506, 507, 5,   48,  0,   0,   507,
            509, 7,   5,   0,   0,   508, 510, 7,   6,   0,   0,   509, 508, 1,   0,   0,   0,   510, 511, 1,   0,
            0,   0,   511, 509, 1,   0,   0,   0,   511, 512, 1,   0,   0,   0,   512, 146, 1,   0,   0,   0,   513,
            514, 3,   155, 77,  0,   514, 515, 5,   104, 0,   0,   515, 148, 1,   0,   0,   0,   516, 517, 3,   155,
            77,  0,   517, 518, 5,   115, 0,   0,   518, 150, 1,   0,   0,   0,   519, 520, 3,   155, 77,  0,   520,
            521, 5,   100, 0,   0,   521, 152, 1,   0,   0,   0,   522, 523, 3,   155, 77,  0,   523, 524, 5,   113,
            0,   0,   524, 154, 1,   0,   0,   0,   525, 527, 7,   0,   0,   0,   526, 525, 1,   0,   0,   0,   526,
            527, 1,   0,   0,   0,   527, 531, 1,   0,   0,   0,   528, 530, 7,   7,   0,   0,   529, 528, 1,   0,
            0,   0,   530, 533, 1,   0,   0,   0,   531, 529, 1,   0,   0,   0,   531, 532, 1,   0,   0,   0,   532,
            534, 1,   0,   0,   0,   533, 531, 1,   0,   0,   0,   534, 536, 5,   46,  0,   0,   535, 537, 7,   7,
            0,   0,   536, 535, 1,   0,   0,   0,   537, 538, 1,   0,   0,   0,   538, 536, 1,   0,   0,   0,   538,
            539, 1,   0,   0,   0,   539, 156, 1,   0,   0,   0,   540, 546, 5,   34,  0,   0,   541, 542, 5,   92,
            0,   0,   542, 545, 9,   0,   0,   0,   543, 545, 9,   0,   0,   0,   544, 541, 1,   0,   0,   0,   544,
            543, 1,   0,   0,   0,   545, 548, 1,   0,   0,   0,   546, 547, 1,   0,   0,   0,   546, 544, 1,   0,
            0,   0,   547, 549, 1,   0,   0,   0,   548, 546, 1,   0,   0,   0,   549, 550, 5,   34,  0,   0,   550,
            158, 1,   0,   0,   0,   551, 555, 5,   39,  0,   0,   552, 556, 9,   0,   0,   0,   553, 554, 5,   92,
            0,   0,   554, 556, 9,   0,   0,   0,   555, 552, 1,   0,   0,   0,   555, 553, 1,   0,   0,   0,   556,
            557, 1,   0,   0,   0,   557, 558, 5,   39,  0,   0,   558, 160, 1,   0,   0,   0,   559, 561, 7,   7,
            0,   0,   560, 559, 1,   0,   0,   0,   561, 562, 1,   0,   0,   0,   562, 560, 1,   0,   0,   0,   562,
            563, 1,   0,   0,   0,   563, 162, 1,   0,   0,   0,   564, 565, 5,   91,  0,   0,   565, 566, 5,   93,
            0,   0,   566, 164, 1,   0,   0,   0,   567, 568, 5,   99,  0,   0,   568, 569, 5,   111, 0,   0,   569,
            570, 5,   110, 0,   0,   570, 571, 5,   115, 0,   0,   571, 572, 5,   116, 0,   0,   572, 166, 1,   0,
            0,   0,   573, 574, 5,   110, 0,   0,   574, 575, 5,   111, 0,   0,   575, 576, 5,   116, 0,   0,   576,
            168, 1,   0,   0,   0,   577, 579, 7,   8,   0,   0,   578, 577, 1,   0,   0,   0,   579, 582, 1,   0,
            0,   0,   580, 578, 1,   0,   0,   0,   580, 581, 1,   0,   0,   0,   581, 583, 1,   0,   0,   0,   582,
            580, 1,   0,   0,   0,   583, 587, 7,   9,   0,   0,   584, 586, 7,   10,  0,   0,   585, 584, 1,   0,
            0,   0,   586, 589, 1,   0,   0,   0,   587, 585, 1,   0,   0,   0,   587, 588, 1,   0,   0,   0,   588,
            170, 1,   0,   0,   0,   589, 587, 1,   0,   0,   0,   590, 591, 5,   59,  0,   0,   591, 172, 1,   0,
            0,   0,   592, 594, 7,   11,  0,   0,   593, 592, 1,   0,   0,   0,   594, 595, 1,   0,   0,   0,   595,
            593, 1,   0,   0,   0,   595, 596, 1,   0,   0,   0,   596, 597, 1,   0,   0,   0,   597, 598, 6,   86,
            0,   0,   598, 174, 1,   0,   0,   0,   599, 600, 5,   47,  0,   0,   600, 601, 5,   42,  0,   0,   601,
            605, 1,   0,   0,   0,   602, 604, 9,   0,   0,   0,   603, 602, 1,   0,   0,   0,   604, 607, 1,   0,
            0,   0,   605, 606, 1,   0,   0,   0,   605, 603, 1,   0,   0,   0,   606, 608, 1,   0,   0,   0,   607,
            605, 1,   0,   0,   0,   608, 609, 5,   42,  0,   0,   609, 610, 5,   47,  0,   0,   610, 611, 1,   0,
            0,   0,   611, 612, 6,   87,  0,   0,   612, 176, 1,   0,   0,   0,   613, 614, 5,   47,  0,   0,   614,
            615, 5,   47,  0,   0,   615, 619, 1,   0,   0,   0,   616, 618, 8,   12,  0,   0,   617, 616, 1,   0,
            0,   0,   618, 621, 1,   0,   0,   0,   619, 617, 1,   0,   0,   0,   619, 620, 1,   0,   0,   0,   620,
            622, 1,   0,   0,   0,   621, 619, 1,   0,   0,   0,   622, 623, 6,   88,  0,   0,   623, 178, 1,   0,
            0,   0,   17,  0,   484, 497, 504, 511, 526, 531, 538, 544, 546, 555, 562, 580, 587, 595, 605, 619, 1,
            6,   0,   0};
        staticData->serializedATN =
            antlr4::atn::SerializedATNView(serializedATNSegment,
                                           sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

        antlr4::atn::ATNDeserializer deserializer;
        staticData->atn = deserializer.deserialize(staticData->serializedATN);

        const size_t count = staticData->atn->getNumberOfDecisions();
        staticData->decisionToDFA.reserve(count);
        for (size_t i = 0; i < count; i++)
        {
            staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
        }
        ancelexerLexerStaticData = staticData.release();
    }

}

anceLexer::anceLexer(CharStream* input) : Lexer(input)
{
    anceLexer::initialize();
    _interpreter = new atn::LexerATNSimulator(this,
                                              *ancelexerLexerStaticData->atn,
                                              ancelexerLexerStaticData->decisionToDFA,
                                              ancelexerLexerStaticData->sharedContextCache);
}

anceLexer::~anceLexer()
{
    delete _interpreter;
}

std::string anceLexer::getGrammarFileName() const
{
    return "ance.g4";
}

const std::vector<std::string>& anceLexer::getRuleNames() const
{
    return ancelexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& anceLexer::getChannelNames() const
{
    return ancelexerLexerStaticData->channelNames;
}

const std::vector<std::string>& anceLexer::getModeNames() const
{
    return ancelexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& anceLexer::getVocabulary() const
{
    return ancelexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView anceLexer::getSerializedATN() const
{
    return ancelexerLexerStaticData->serializedATN;
}

const atn::ATN& anceLexer::getATN() const
{
    return *ancelexerLexerStaticData->atn;
}

void anceLexer::initialize()
{
    std::call_once(ancelexerLexerOnceFlag, ancelexerLexerInitialize);
}
